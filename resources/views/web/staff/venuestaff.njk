{% extends "web/master" %}

{% block content %}
  {% verbatim %}
    <section class="content" id="venueStaffController" style="display:none;">
      <div class="box box-primary box-solid">
        <div class="box-header with-border">
          <h3 class="box-title">Interested</h3>
          <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
          </div>
        </div>
        <div class="box-body">
          <div class="row">
            <div class="col-sm-6 col-md-4 col-lg-3" v-for="staff in interested">
              <div class="box box-default">
                <div class="box-header">
                  <h3 class="box-title"><img v-bind:src="staff.avatar" class="img-circle" style="height: 30px; width: auto;" alt="">&nbsp;&nbsp;{{ staff.fullname | title }}</h3>
                  <div class="box-tools pull-right">
                    <button type="button" class="btn btn-sm btn-default" name="button"><strong><i class="fa fa-envelope"></i></strong></button>
                    <button type="button" v-on:click="onHire(staff._id, staff.fullname)" class="btn btn-sm btn-default" name="button"><strong><i class="fa fa-plus-circle"></i></strong></button>
                  </div>
                </div>
                <div class="box-body">
                  <p class="text-muted">{{ staff.rateBadge }}</p>
                  <div>
                    <span class="label label-primary" v-for="position in staff.position">{{ position | title }}</span>
                  </div>
                  <hr>
                  <p class="text-muted">{{ staff.bio }}</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="box box-primary box-solid">
        <div class="box-header with-border">
          <h3 class="box-title">My Staff</h3>
        </div>
        <div class="box-body">
          <div class="row">
            <div class="col-sm-12" v-for="my in mystaffs" :key="my._id">
                <div class="box box-default">
                  <div class="box-header">
                    <h3 class="box-title">
                      <img v-bind:src="my.staff.avatar" class="img-circle" style="height: 30px; width: auto;" alt="">
                      &nbsp;&nbsp;{{ my.staff.fullname | title }}
                    </h3>
                    <div class="box-tools pull-right">
                      <button type="button" v-on:click="sendMessage(my.staff)" class="btn btn-sm btn-default" name="button"><strong><i class="fa fa-envelope"></i></strong></button>
                      <button type="button" class="btn btn-sm btn-default dropdown-toggle" data-toggle="dropdown" name="button"><strong><i class="fa fa-gear"></i></strong></button>
                      <ul class="dropdown-menu">
                        <li><a href="#">Remove Staff</a></li>
                        <li v-if="my.trial"><a v-on:click="hire(my)">Hire Now</a></li>
                      </ul>
                    </div>
                  </div>
                  <div class="box-body">
                    <p>
                      <span v-if="my.trial" class="label label-primary">Trial</span>
                      <span v-if="my.hired" class="label label-success">Active</span>
                    </p>
                    <div class="text-muted" >
                      <p v-if="my.trial"><i class="fa fa-calendar"></i> {{ my.trialStartDate | trial }} - {{ my.trialEndDate | trial }}</p>
                      <p v-if="my.trial"><i class="fa fa-clock-o"></i> {{ my.trialEndDate | until }} remaining</p>
                      <p v-if="my.hired"><i class="fa fa-clock-o"></i> Member Since {{ my.hiredDate | from  }}</p>
                    </div>
                    <hr>
                    <div class="row">
                      <div class="col-sm-6">
                        <div class="box box-default">
                          <div class="box-header">
                            <h3 class="box-title">Tasks</h3>
                            <div class="box-tools pull-right">
                              <button type="button" class="btn btn-box-tool" v-on:click="addAction(my, 'task')"><i class="fa fa-plus"></i></button>
                            </div>
                          </div>
                          <div class="box-body b-max">
                            <div class="text-muted">
                              <transition-group name="fade">
                                <p v-for="task in my.tasks" class="task" :key="task._id" >
                                  <small><i class="fa fa-check"></i></small>&nbsp;
                                  {{ task.description }}
                                  <a v-on:click="deleteAction(task, 'task')" class="text-danger pull-right task-action"><i class="fa fa-trash"></i></a>
                                  <a v-on:click="editAction(task, 'task')" class="text-success pull-right task-action"><i class="fa fa-edit"></i>&nbsp;</a>
                                </p>
                              </transition-group>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="col-sm-6">
                        <div class="box box-default">
                          <div class="box-header">
                            <h3 class="box-title">Suggestion</h3>
                            <div class="box-tools pull-right">
                              <button type="button" class="btn btn-box-tool" v-on:click="addAction(my, 'suggestion')"><i class="fa fa-plus"></i></button>
                            </div>
                          </div>
                          <div class="box-body b-max">
                            <div class="text-muted">
                              <p v-for="suggestion in my.suggestions" class="task">
                                {{ suggestion.description }}
                                <a v-on:click="deleteAction(suggestion, 'suggestion')" class="text-danger pull-right task-action"><i class="fa fa-trash"></i></a>
                                <a v-on:click="editAction(suggestion, 'suggestion')" class="text-success pull-right task-action"><i class="fa fa-edit"></i>&nbsp;</a>
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
          </div>
        </div>
      </div>
    </section>
  {% endverbatim %}
{% endblock %}

{% block mystaff_scripts %}
  <script src="https://unpkg.com/vue"></script>
  <script type="text/javascript">
    let venuestaff = new Vue({
      el: '#venueStaffController',
      data: {
        interested: [],
        mystaffs: []
      },
      mounted: function(){
        $('#venueStaffController').show()
      },
      filters: {
        title: function(s) {
          return s.replace(/\w\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
        },
        until: function(t) {
          return moment(t).fromNow(true)
        },
        from: function(t) {
          return moment(t).fromNow()
        },
        trial: function(t) {
          return moment(t).format('DD MMM')
        },
        truncate: function(string, value) {
        	return `${string.substring(0, value)}...`
        }
      },
      methods: {
        editAction: function(obj, action) {
          swal({
           title: `Edit ${action}`,
           input: 'text',
           inputValue: `${obj.description}`,
           showCancelButton: true,
           confirmButtonText: 'Save',
           showLoaderOnConfirm: true,
           allowOutsideClick: false,
           preConfirm: function (des) {
             return new Promise(function (resolve, reject) {
               if (des) {
                 $.post(`/${action}/${obj._id}/edit`, { description: des }, function(res) {
                   if (res.status) {
                     resolve(res)
                   }
                 })
               } else {
                 reject('The value is blank!')
               }
             })
           }
         }).then(function(res) {
           venuestaff.getStaffs()
         }, function(c) {})
        },
        deleteAction: function(obj, action){
          swal({
            title: `Are you sure you want to delete this ${action}?`,
            text: obj.description,
            type: 'warning',
            showCancelButton: true,
            focusConfirm: false,
            confirmButtonText: 'Delete',
            cancelButtonText: 'Cancel',
            confirmButtonColor: '#ba2e2e'
          }).then(function(confirm) {
            if (confirm) {
              swal.showLoading()
              return new Promise(function (resolve, reject){
                $.post(`/${action}/${obj._id}/delete`, {}, function(res) {
                  if (res.status) {
                    resolve(res)
                  }
                })
              }).then(function(res){
                swal(`${action} deleted!`, '', 'success')
                venuestaff.getStaffs()
              })
            }
          })
        },
        hire: function(my) {
          let fullname = this.$options.filters.title(my.staff.fullname)
          swal({
            title: `Hire ${fullname}?`,
            type: 'warning',
            showCancelButton: true,
            showLoaderOnConfirm: true,
            confirmButtonText: 'Hire',
            cancelButtonText: 'Cancel'
          }).then(function(confirm){
            if (confirm) {
              return new Promise(function (resolve, reject){
                $.post(`/hire/${my._id}`, {}, function(res) {
                  if (res.status) {
                    resolve(res)
                  }
                })
              }).then(function(res){
                swal(`Successfully hired ${fullname}`, '', 'success')
                venuestaff.getStaffs()
              })
            }
          })
        },
        addAction: function(my, action) {
          swal({
           title: `Add ${action} to ${this.$options.filters.title(my.staff.fullname)} `,
           input: 'text',
           showCancelButton: true,
           confirmButtonText: 'Add',
           showLoaderOnConfirm: true,
           allowOutsideClick: false,
           preConfirm: function (des) {
               return new Promise(function (resolve, reject) {
                 if (des) {
                   $.post(`/add-${action}/${my._id}`, { description: des }, function(res) {
                     if (res.status) {
                       resolve(res)
                     }
                   })
                 } else {
                   reject('The message is blank!')
                 }
               })
             }
           }).then(function(res) {
             venuestaff.getStaffs()
           })
        },
        onHire: function(staffId, staffName) {
          swal({
            title: `Would you like to give ${this.$options.filters.title(staffName)} a trial?`,
            text: 'Alternatively, you can skip the trial process and hire right away.',
            type: 'info',
            showCloseButton: true,
            showCancelButton: true,
            focusConfirm: false,
            confirmButtonText: '<i class="fa fa-clock-o"></i> Trial',
            confirmButtonAriaLabel: 'Thumbs up, great!',
            cancelButtonText: '<i class="fa fa-long-arrow-right"></i> Skip',
            cancelButtonAriaLabel: 'Skip'
          }).then(function () {
            swal.showLoading()
            new Promise(function(resolve, reject) {
              $.post(`/trial/${staffId}`, {}, function(res) {
                if (res.status) {
                  resolve(res)
                }
              })
            }).then(function(res) {
              venuestaff.getInterested()
              venuestaff.getStaffs()
             })
           }, function (dismiss) {
             if (dismiss === 'cancel') {
               swal.showLoading()
               new Promise(function(resolve, reject) {
                 $.post(`/direct-hire/${staffId}`, {}, function(res) {
                   if (res.status) {
                     resolve(res)
                   }
                 })
               }).then(function(res) {
                 swal(
                   'Hired!',
                   `${staffName} has been hired!`,
                   'success'
                 )
                 venuestaff.getInterested()
                 venuestaff.getStaffs()
                })

             }
           })
        },
        sendMessage(staff) {
           swal({
            title: `Send message to ${this.$options.filters.title(staff.fullname)}`,
            input: 'text',
            showCancelButton: true,
            confirmButtonText: 'Send',
            showLoaderOnConfirm: true,
            allowOutsideClick: false,
            preConfirm: function (msg) {
              return new Promise(function (resolve, reject) {
                if (msg) {
                  $.post('/new-staff-message', { receiver: staff.user, message: msg, staff: staff._id }, function(res) {
                    if (res.status) {
                      resolve()
                    }
                  })
                } else {
                  reject('The message is blank!')
                }
              })
            }
          }).then(function(msg) {
            swal({
              type: 'success',
              title: 'Successfully Sent!'
            })
          })
        },
        getInterested: function(){
          new Promise(function(resolve, reject){
            $.post('/interested-staffs', {}, function(res) {
              if (res.status) {
                resolve(res.interested)
              }
            })
          }).then(function(interested){
            venuestaff.interested = interested
          })
        },
        getStaffs: function(){
          new Promise(function(resolve, reject){
            $.post('/my-staffs', {}, function(res) {
              if (res.status) {
                resolve(res.staffs)
              }
            })
          }).then(function(staffs){
            venuestaff.mystaffs = staffs
          })
        }
      }
    })
    venuestaff.getStaffs()
    venuestaff.getInterested()
  </script>
{% endblock %}
